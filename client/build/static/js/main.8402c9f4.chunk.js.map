{"version":3,"sources":["actions/index.js","actions/actions.js","components/Header.js","components/Login.js","components/Home.js","components/PageOne.js","components/PageTwo.js","App.js","serviceWorker.js","reducers/authReducer.js","reducers/index.js","reducers/homeReducer.js","reducers/geoReducer.js","reducers/aggReducer.js","index.js"],"names":["logoutUser","_ref2","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","dispatch","response","wrap","_context2","prev","next","axios","get","sent","console","log","type","payload","stop","this","_x2","apply","arguments","Header","auth","isAuthenticated","react_default","createElement","id","className","Link","to","onClick","props","react","renderNav","Component","connect","_ref","Login","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","login","_this$state","state","username","password","loginUser","handleChange","prop","event","setState","defineProperty","target","value","Redirect","components_Header","onChange","placeholder","_callee","user","_context","post","_x","Home","fetchActivityCount","fetchRegionCount","fetchSectorCount","fetchCountryCount","data","labelName","color","renderData","length","colors","values","labels","i","tmp","push","datasets","label","backgroundColor","concat","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","_this$props","home","react_chartjs_2_es","createChartData","height","no","_ref7","_callee7","activityCount","_context7","withCredentials","_x7","_ref4","_callee4","countryCount","_context4","_x4","_ref6","_callee6","regionCount","_context6","_x6","_ref5","_callee5","sectorCount","_context5","_x5","PageOne","fetchCountrySectorAgg","fetchSectorActivityAgg","cat","keys","bgColors","aggregate","aggdata","sdata","sum","reduce","p","n","subLabels","j","dataset","parseInt","toFixed","mainCategory","options","scales","xAxes","stacked","ticks","callback","index","yAxes","agg","barChartOptions","_ref9","_callee9","csagg","_context9","_x9","_ref10","_callee10","s_agg","_context10","_x10","PageTwo","fetchCountrySum","temp","country","count","geo","index_esm","chartType","mapsApiKey","rootProps","data-testid","_ref8","_callee8","countrySum","_context8","_x8","App","fetchUser","BrowserRouter","Switch","Route","exact","key","path","component","_ref3","_callee3","_context3","_x3","Boolean","window","location","hostname","match","initialState","appReducer","combineReducers","undefined","action","newState","err","objectSpread","region","activity","sector","sagg","rootReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","logger","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8402c9f4.chunk.js","sourcesContent":["import axios from 'axios';\nimport { LOGIN_USER, LOGOUT_USER, FETCH_USER, FETCH_COUNTRY_COUNT, FETCH_SECTOR_COUNT, FETCH_REGION_COUNT, FETCH_ACTIVITY_COUNT, FETCH_COUNTRY_SUM, FETCH_COUNTRY_SECTOR_AGG, FETCH_SECTOR_ACTIVITY_AGG } from './actions';\n\nexport const loginUser=(username,password)=>{\n    return async (dispatch)=>{\n        const user = await axios.post('/login',{username,password});\n        console.log('returned user -->',user);\n        dispatch({type:LOGIN_USER,payload:user});\n    }\n}\n\nexport const logoutUser=()=>{\n    return async (dispatch)=>{\n        const response = await axios.get('/logout');\n        console.log('logout response -->',response)\n        dispatch({type:LOGOUT_USER,payload:response});\n    }\n}\n\nexport const fetchUser=()=>{\n    return async (dispatch)=>{\n        const user = await axios.get('/user/current',{withCredentials:true});\n        console.log('current user -->',user);\n        dispatch({type:FETCH_USER,payload:user});\n    }\n}\n\nexport const fetchCountryCount=(no)=>{\n    return async (dispatch)=>{\n        const countryCount = await axios.get(`/analytics/total/country/${no}`,{withCredentials:true});\n        console.log(countryCount);\n        dispatch({type:FETCH_COUNTRY_COUNT,payload:countryCount});\n    }\n}\n\nexport const fetchSectorCount=(no)=>{\n    return async (dispatch)=>{\n        const sectorCount = await axios.get(`/analytics/total/sector/${no}`,{withCredentials:true});\n        console.log(sectorCount);\n        dispatch({type:FETCH_SECTOR_COUNT,payload:sectorCount});\n    }\n}\n\nexport const fetchRegionCount=(no)=>{\n    return async (dispatch)=>{\n        const regionCount = await axios.get(`/analytics/total/region/${no}`,{withCredentials:true});\n        console.log(regionCount);\n        dispatch({type:FETCH_REGION_COUNT,payload:regionCount});\n    }\n}\n\nexport const fetchActivityCount=(no)=>{\n    return async (dispatch)=>{\n        const activityCount = await axios.get(`/analytics/total/activity/${no}`,{withCredentials:true});\n        console.log(activityCount);\n        dispatch({type:FETCH_ACTIVITY_COUNT,payload:activityCount});\n    }\n}\n\n\nexport const fetchCountrySum=()=>{\n    return async (dispatch)=>{\n        const countrySum = await axios.get(`/analytics/country/sum`,{withCredentials:true});\n        console.log(countrySum);\n        dispatch({type:FETCH_COUNTRY_SUM,payload:countrySum});\n    }\n}\n\n\nexport const fetchCountrySectorAgg=(no)=>{\n    return async (dispatch)=>{\n        const csagg = await axios.get(`/analytics/agg/country/sector/${no}`,{withCredentials:true});\n        console.log(csagg);\n        dispatch({type:FETCH_COUNTRY_SECTOR_AGG,payload:csagg});\n    }\n}\n\nexport const fetchSectorActivityAgg=(no)=>{\n    return async (dispatch)=>{\n        const s_agg = await axios.get(`/analytics/agg/sector/activity/${no}`,{withCredentials:true});\n        console.log(s_agg);\n        dispatch({type:FETCH_SECTOR_ACTIVITY_AGG,payload:s_agg});\n    }\n}","export const LOGIN_USER = 'login_user';\nexport const FETCH_USER = 'fetch_user';\nexport const LOGOUT_USER = 'logout_user';\nexport const FETCH_SECTOR_COUNT = 'fetch_sector_count';\nexport const FETCH_REGION_COUNT = 'fetch_region_count';\nexport const FETCH_COUNTRY_COUNT = 'fetch_country_count';\nexport const FETCH_ACTIVITY_COUNT = 'fetch_activity_count';\nexport const FETCH_COUNTRY_SUM = 'fetch_country_sum';\nexport const FETCH_SECTOR_ACTIVITY_AGG= 'fetch_sector_activity_agg';\nexport const FETCH_COUNTRY_SECTOR_AGG = 'fetch_country_sector_agg';\n","import React,{Component,Fragment} from 'react';\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport {logoutUser} from '../actions';\n\nclass Header extends Component{\n\n    renderNav(auth){\n        if(auth && auth.isAuthenticated){\n            return(\n                <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down \">\n                    <li><Link to=\"/page/one\">Agrregation</Link></li>\n                    <li><Link to=\"/page/two\">Geo</Link></li>\n                    <li><button id=\"logout-button\" className=\"waves-effect waves-light btn-flat\" \n                    onClick={this.props.logoutUser}>Logout</button></li>\n                </ul>\n            );\n        }\n        return(<Fragment></Fragment>)\n    }\n\n    render(){\n        return(\n        <div className=\"navbar-fixed\">    \n            <nav className=\"header-nav\">\n                <div className=\"nav-wrapper\">\n                    <Link to=\"/home\" className=\"main-logo brand-logo\">Logo</Link>                \n                        {this.renderNav(this.props.auth)}\n                </div>\n            </nav>\n        </div>    \n        );\n    }\n}\n\nfunction mapStateToProps({auth}){\n    return {auth};\n}\n\n\nexport default connect(mapStateToProps,{logoutUser})(Header);","import React,{Component} from 'react';\nimport {loginUser} from '.././actions';\nimport {connect} from 'react-redux';\nimport {Redirect} from 'react-router-dom';\nimport Header from './Header';\n\n\nclass Login extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            username:'',\n            password:''\n        }\n    }\n\n    login=()=>{\n        const {username,password} = this.state;\n        if(username!=='' && password!==''){\n            this.props.loginUser(username,password);\n        }\n    }\n\n    handleChange=(prop)=>(event)=>{\n        this.setState({[prop]:event.target.value});\n    }\n\n    render(){\n        const {auth} = this.props;\n        return(\n            <div>\n                {auth && auth.isAuthenticated &&\n                (<Redirect to='/home'/>)}\n                <Header />\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div id=\"loginForm\" className=\"col s6 offset-s3 card\">\n                            <h4 className=\"center\">Login</h4>\n                            <div className=\"input-field col s12\">\n                                <input type='text' id='username' value={this.state.username}\n                                onChange={this.handleChange('username')} placeholder='Username'/>\n                            </div>\n                            <div className=\"input-field col s12\">\n                                <input type='password' id='password' value={this.state.password}\n                                    onChange={this.handleChange('password')} placeholder='Password'/>\n                            </div>        \n                            <div className=\"input-field col s12\">\n                                <button className=\"waves-effect waves-light btn\" \n                                onClick={this.login}>Login</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n        )\n    }\n}\n\nfunction mapStateToProps({auth}){\n    return {auth};\n}\n\nexport default connect(mapStateToProps,{loginUser})(Login);","import React,{Component} from 'react';\nimport {connect} from 'react-redux';\nimport {Redirect} from 'react-router-dom';\nimport {logoutUser,fetchActivityCount,fetchCountryCount,\n    fetchRegionCount,fetchSectorCount} from '../actions';\nimport Header from './Header';\nimport {Line,Bar,Doughnut} from 'react-chartjs-2';\n\nclass Home extends Component{\n\n    componentDidMount(){\n        this.props.fetchActivityCount(10);\n        this.props.fetchRegionCount(10);\n        this.props.fetchSectorCount(10);\n        this.props.fetchCountryCount(10);\n    }\n\n    createChartData(data,labelName,color){\n        let renderData = {};\n        if(data && data[labelName] \n            && data[labelName].length>0){\n                \n                const colors=['rgba(255,99,132,','rgba(140, 234, 110,',\n                            'rgba(228, 90, 68,','rgba(56, 187, 156,'];\n                \n                let values=[],labels=[];\n\n                for(let i=0;i<data[labelName].length;i++){\n                    let tmp = Object.values(data[labelName][i]);\n                    labels.push(tmp[0]);\n                    values.push(tmp[1]);\n                }\n                \n            renderData['labels'] = labels;\n            const datasets=[\n                {\n                  label: labelName,\n                  backgroundColor: `${colors[color]}0.5)`,\n                  borderColor: `${colors[color]}1)`,\n                  borderWidth: 1,\n                  hoverBackgroundColor: `${colors[color]}0.7)`,\n                  hoverBorderColor: `${colors[color]}1)`,\n                  data: values\n                }];\n            // making dougnut colorful      \n            if(labelName==='country'){\n                const bgColors=['rgba(56, 187, 156,0.8)','rgba(243,220,97,0.8)','rgba(243,146,97,0.8)',\n                                'rgba(234,107,141,0.8)','rgba(140, 234, 110,0.5)','rgba(67, 229, 249,0.7)',\n                                'rgba(243,97,97,0.8)','rgba(168, 228, 218,0.8)','rgba(228, 90, 68,0.7)',\n                                'rgba(101,97,243,0.8)'];\n                datasets[0]['backgroundColor']=bgColors;\n            }\n            renderData['datasets']=datasets;\n        }\n        return renderData;\n    }\n\n    render(){\n        const {auth,home} = this.props;\n                \n        return(\n            <div>\n                {(!auth || !auth.isAuthenticated) &&\n                (<Redirect to='/'/>)}\n                <Header />\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col s6 card\">\n                            <h4>Top Sectors</h4>\n                            <Line data={this.createChartData(home,'sector',0)} height={250}/>\n                        </div>\n                        <div className=\"col s6 card\">\n                            <h4>Top Activity</h4>\n                            <Bar data={this.createChartData(home,'activity',1)} height={250}/>\n                        </div>\n                        <div className=\"col s6 card\">\n                            <h4>Top Countries</h4>\n                            <Doughnut data={this.createChartData(home,'country',2)} height={250}/>\n                        </div>\n                        <div className=\"col s6 card\">\n                            <h4>Top Regions</h4>\n                            <Bar data={this.createChartData(home,'region',3)} height={250}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps({auth,home}){\n    return {auth,home};\n}\n\nexport default connect(mapStateToProps,{logoutUser,fetchActivityCount,fetchCountryCount,\n    fetchRegionCount,fetchSectorCount})(Home);","import React,{Component} from 'react';\nimport {connect} from 'react-redux';\nimport {Redirect} from 'react-router-dom';\nimport {logoutUser,fetchCountrySectorAgg,fetchSectorActivityAgg} from '../actions';\nimport Header from './Header';\nimport {Bar} from 'react-chartjs-2';\n\n\nclass PageOne extends Component{\n\n    componentDidMount(){\n        this.props.fetchCountrySectorAgg(10);\n        this.props.fetchSectorActivityAgg(10);\n    }\n\n    createChartData(data,cat){\n        let renderData={};\n        // data is redux state containing two agg values csagg,sagg\n        // checking if data exists and contains category and the category is not empty\n        // agg:{sagg:{data:......}}\n        if(data && data[cat] && Object.keys(data[cat]).length>0){\n            // array of colors to choose from \n            const bgColors=['rgba(56, 187, 156,0.8)','rgba(243,220,97,0.8)','rgba(243,146,97,0.8)',\n                            'rgba(234,107,141,0.8)','rgba(140, 234, 110,0.5)','rgba(67, 229, 249,0.7)',\n                            'rgba(243,97,97,0.8)','rgba(168, 228, 218,0.8)','rgba(228, 90, 68,0.7)',\n                            'rgba(101,97,243,0.8)','rgba(56, 187, 156,0.8)','rgba(243,220,97,0.8)','rgba(243,146,97,0.8)',\n                            'rgba(234,107,141,0.8)','rgba(140, 234, 110,0.5)','rgba(67, 229, 249,0.7)',\n                            'rgba(243,97,97,0.8)','rgba(168, 228, 218,0.8)','rgba(228, 90, 68,0.7)',\n                            'rgba(101,97,243,0.8)'];\n\n            // get the aggregate sagg/csagg\n            let aggregate = data[cat];\n            console.log(aggregate);\n            // datasets array for storing stacked charts\n            let datasets = [];\n            // get the no of keys in sagg/agg 's data field to iterate and\n            // calculate percents\n            let aggdata = Object.keys(aggregate.data);\n            for(let i=0;i<aggdata.length;i++){\n                // get the data from i'th key of sagg/csagg's data\n                // will be used to calculate %\n                let sdata = Object.values(aggregate.data[aggdata[i]]);\n                // get the sum of the array\n                let sum = sdata.reduce((p,n)=>p+n,0);\n                // get the keys these will be the labels for each bar\n                let subLabels = Object.keys(aggregate.data[aggdata[i]]);\n\n                console.log(sdata,subLabels)\n                for(let j=0;j<sdata.length;j++){\n                    // individual bar dataset object\n                    let dataset ={};\n                    dataset[\"label\"] = subLabels[j];\n                    dataset[\"data\"] = [(((parseInt(sdata[j],10)/sum).toFixed(2))*120).toFixed(1)];\n                    dataset[\"backgroundColor\"] = bgColors[j];\n                    dataset[\"stack\"]= aggregate.mainCategory[i];\n                    datasets.push(dataset);\n                }\n            }\n            renderData[\"datasets\"] = datasets;\n            //renderData[\"labels\"]=aggregate.mainCategory.map((e,i)=>i);\n        }\n        console.log(renderData);\n        return renderData;\n    }\n\n    barChartOptions(data,cat){\n        let options ={};\n        if(data && data[cat] && Object.keys(data[cat]).length>0){\n          options= {\n              scales: {\n                xAxes: [{\n                  stacked: true,\n                  ticks:{\n                      callback:function(value,index,values){\n                          console.log(data[cat][\"mainCategory\"][index]);\n                        return value;\n                      }\n                  }\n               }],\n                yAxes: [{\n                     stacked: true,\n                     \n                  }]\n              }\n            };\n        }\n        return options;\n    }\n\n    render(){\n        const {auth,agg} = this.props;\n    \n        return(\n            <div>\n                {(!auth || !auth.isAuthenticated) &&\n                (<Redirect to='/'/>)}\n                <Header />\n                <div className=\"container\">\n                    <div className=\"row\">\n                    <div className=\"col s12\">\n                        <h3>Distribution of Activities across Sectors</h3>\n                            <Bar data={this.createChartData(agg,'sagg')}\n                            options={this.barChartOptions(agg,'sagg')}\n                            height={250} />\n                        </div>\n                        <div className=\"col s12\">\n                            <h3>Distribution of Sectors across Countries</h3>\n                            <Bar data={this.createChartData(agg,'sagg')} \n                            options={this.barChartOptions(agg,'sagg')}\n                            height={250}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps({auth,agg}){\n    return {auth,agg};\n}\n\nexport default connect(mapStateToProps,{logoutUser,\n    fetchCountrySectorAgg,fetchSectorActivityAgg})(PageOne);","import React,{Component} from 'react';\nimport {connect} from 'react-redux';\nimport {Redirect} from 'react-router-dom';\nimport {logoutUser,fetchCountrySum} from '../actions';\nimport Header from './Header';\nimport {Chart} from 'react-google-charts';\n\n\nclass PageTwo extends Component{\n\n    componentDidMount(){\n        this.props.fetchCountrySum();\n    }    \n\n    createChartData(data){\n        let renderData=[[\"Country\",\"Total Loan Value(USD)\"]];\n        console.log(data);\n        if(data && data.sum && data.sum.length>0){\n            const {sum} = data; \n            for(let i=0;i<sum.length;i++){\n                let temp =[];\n                temp.push(sum[i].country);\n                temp.push(sum[i].count);\n                renderData.push(temp);\n            }\n        }\n        return renderData;\n    }\n\n    render(){\n        const {auth,geo} = this.props;\n        return(\n            <div>\n                {(!auth || !auth.isAuthenticated) &&\n                (<Redirect to='/'/>)}\n                <Header />\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col s12\">\n                            <h4>Total Loans given in a Country</h4>\n                            <Chart\n                                chartType=\"GeoChart\"\n                                data={this.createChartData(geo)}\n                                mapsApiKey=\"AIzaSyDYjXmUwL6crbuft4eGaG8Er754uYKrpiY\"\n                                rootProps={{ 'data-testid': '1' }}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps({auth,geo}){\n    return {auth,geo};\n}\n\nexport default connect(mapStateToProps,{logoutUser,fetchCountrySum})(PageTwo);","import 'materialize-css/dist/css/materialize.min.css'\nimport React, { Component } from 'react';\nimport './App.css';\nimport {BrowserRouter,Route,Switch} from 'react-router-dom';\nimport Login from './components/Login';\nimport Home from './components/Home';\nimport PageOne from './components/PageOne';\nimport PageTwo from './components/PageTwo';\nimport {connect} from 'react-redux';\nimport {fetchUser} from './actions';\n\n\nclass App extends Component {\n\n  componentDidMount(){\n    console.log('mounted');\n    this.props.fetchUser();\n}\n\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n            <Route exact key=\"0\" path=\"/\" component={Login}/>\n            <Route exact key=\"1\" path=\"/home\" component={Home}/>\n            <Route exact key=\"2\" path=\"/page/one\" component={PageOne}/>\n            <Route exact key=\"3\" path=\"/page/two\" component={PageTwo}/>\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nfunction mapStateToProps(state){\n  return state;\n}\n\nexport default connect(mapStateToProps,{fetchUser})(App);\n\n/* \n<div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n      </div> */","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { LOGIN_USER, LOGOUT_USER, FETCH_USER } from \"../actions/actions\";\n\nconst initialState={\n    isAuthenticated:false\n}\n\nexport default function(state=initialState,action){\n    let  newState={};\n    switch (action.type) {\n        case LOGIN_USER:\n            let {data} = action.payload;\n            console.log(data.err?false:true);\n            newState[\"isAuthenticated\"] = data.err?false:true;\n            newState = {...newState,data};\n            return newState;    \n        case LOGOUT_USER:\n            newState[\"isAuthenticated\"] = false;\n            return newState;\n        case FETCH_USER:\n            data = action.payload.data;\n            newState[\"isAuthenticated\"] = data.err?false:true;\n            return newState;\n        default:\n            return state;\n    }\n}","import {combineReducers} from 'redux';\nimport { LOGOUT_USER } from '../actions/actions';\nimport authReducer from './authReducer';\nimport homeReducer from './homeReducer';\nimport geoReducer from './geoReducer';\nimport aggReducer from './aggReducer';\n\nconst appReducer = combineReducers({\n    auth:authReducer,\n    home:homeReducer,\n    geo:geoReducer,\n    agg:aggReducer\n});\n\nconst rootReducer = (state,action)=>{\n    if(action.type===LOGOUT_USER){\n        state = undefined;\n    }\n    return appReducer(state,action);\n}\n\nexport default rootReducer;","import { FETCH_REGION_COUNT, FETCH_ACTIVITY_COUNT, FETCH_COUNTRY_COUNT, FETCH_SECTOR_COUNT } from \"../actions/actions\";\n\n\n\nexport default function(state={},action){\n    let  newState={};\n    switch (action.type) {\n        case FETCH_REGION_COUNT:\n            let {data:region} = action.payload.data;\n            newState = {...state,region};\n            return newState;    \n        case FETCH_ACTIVITY_COUNT:\n            let {data:activity} = action.payload.data;\n            newState = {...state,activity};\n            return newState;        \n        case FETCH_COUNTRY_COUNT:\n            let {data:country} = action.payload.data;\n            newState = {...state,country};        \n            return newState;\n        case FETCH_SECTOR_COUNT:\n            let {data:sector} = action.payload.data;\n            newState = {...state,sector};\n            return newState;\n        default:\n            return state;\n    }\n}","import { FETCH_COUNTRY_SUM } from \"../actions/actions\";\n\n\n\nexport default function(state={},action){\n    let  newState={};\n    switch (action.type) {\n        case FETCH_COUNTRY_SUM:\n            let {data:sum} = action.payload.data;\n            newState = {...state,sum};\n            return newState;    \n        default:\n            return state;\n    }\n}","import { FETCH_COUNTRY_SECTOR_AGG, FETCH_SECTOR_ACTIVITY_AGG } from \"../actions/actions\";\n\n\n\nexport default function(state={},action){\n    let  newState={};\n    switch (action.type) {\n        case FETCH_COUNTRY_SECTOR_AGG:\n            let {data:csagg} = action.payload;\n            console.log(action.payload.data)\n            newState = {...state,csagg};\n            return newState;    \n        case FETCH_SECTOR_ACTIVITY_AGG:\n            let {data:sagg} = action.payload;\n            newState = {...state,sagg};\n            return newState;        \n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport reduxThunk from 'redux-thunk';\nimport reducers from './reducers';\nimport {applyMiddleware,createStore,compose} from 'redux';\nimport logger from 'redux-logger';\n\n\n// create a redux store to save state\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n\nconst store = createStore(reducers,{},composeEnhancers(applyMiddleware(reduxThunk,logger)));\n\n\nReactDOM.render(\n            <Provider store={store}>\n                <App />\n            </Provider>    , \ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}